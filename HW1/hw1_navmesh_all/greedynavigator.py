import sys ,pygame ,math ,numpy ,random ,time ,copy #line:1
from pygame .locals import *#line:2
from constants import *#line:4
from utils import *#line:5
from core import *#line:6
from queue import PriorityQueue #line:8
from mycreatepathnetwork import *#line:10
def f11 (O000O00000OOO000O ,OOO0OOOO0OO000O0O ):#line:12
    return (((OOO0OOOO0OO000O0O [0 ]-O000O00000OOO000O [0 ])**2 )+((OOO0OOOO0OO000O0O [1 ]-O000O00000OOO000O [1 ])**2 ))**0.5 #line:13
def f24 (OOOO0000O0O00O0OO ,O00O0OO00OO000O0O ):#line:16
    return (OOOO0000O0O00O0OO [0 ]*O00O0OO00OO000O0O [0 ])+(OOOO0000O0O00O0OO [1 ]*O00O0OO00OO000O0O [1 ])#line:17
def f12 (O0OOOO0000O00OOO0 ,OOOO0000O0OOOO0OO ):#line:19
    OOO0OO0O00OO0OOO0 =f11 (O0OOOO0000O00OOO0 [1 ],O0OOOO0000O00OOO0 [0 ])**2.0 #line:20
    if OOO0OO0O00OO0OOO0 ==0.0 :#line:21
        return f11 (OOOO0000O0OOOO0OO ,O0OOOO0000O00OOO0 [0 ])#line:22
    O0O0O0O0O000OOOOO =(OOOO0000O0OOOO0OO [0 ]-O0OOOO0000O00OOO0 [0 ][0 ],OOOO0000O0OOOO0OO [1 ]-O0OOOO0000O00OOO0 [0 ][1 ])#line:26
    OOOO000OOOOOO0O0O =(O0OOOO0000O00OOO0 [1 ][0 ]-O0OOOO0000O00OOO0 [0 ][0 ],O0OOOO0000O00OOO0 [1 ][1 ]-O0OOOO0000O00OOO0 [0 ][1 ])#line:27
    O0000OO0000OO0000 =f24 (O0O0O0O0O000OOOOO ,OOOO000OOOOOO0O0O )/OOO0OO0O00OO0OOO0 #line:28
    if O0000OO0000OO0000 <0.0 :#line:29
        return f11 (OOOO0000O0OOOO0OO ,O0OOOO0000O00OOO0 [0 ])#line:30
    elif O0000OO0000OO0000 >1.0 :#line:31
        return f11 (OOOO0000O0OOOO0OO ,O0OOOO0000O00OOO0 [1 ])#line:32
    OO000O0OO00O00O0O =(O0OOOO0000O00OOO0 [0 ][0 ]+(O0000OO0000OO0000 *(O0OOOO0000O00OOO0 [1 ][0 ]-O0OOOO0000O00OOO0 [0 ][0 ])),O0OOOO0000O00OOO0 [0 ][1 ]+(O0000OO0000OO0000 *(O0OOOO0000O00OOO0 [1 ][1 ]-O0OOOO0000O00OOO0 [0 ][1 ])))#line:33
    return f11 (OOOO0000O0OOOO0OO ,OO000O0OO00O00O0O )#line:34
def f23 (OOOOOOO0O000O00O0 ,O0O00O0OO00OO00OO ):#line:37
    if (OOOOOOO0O000O00O0 [0 ]!=O0O00O0OO00OO00OO [0 ]):#line:40
        O000O00OO00O0O000 =(OOOOOOO0O000O00O0 [1 ]-O0O00O0OO00OO00OO [1 ])/float (OOOOOOO0O000O00O0 [0 ]-O0O00O0OO00OO00OO [0 ])#line:41
        return O000O00OO00O0O000 #line:42
    else :#line:43
        return None #line:44
def f22 (OOOO00O0O000O0O00 ,O000OOOOO00O0O0OO ):#line:46
    return OOOO00O0O000O0O00 [1 ]-(O000OOOOO00O0O0OO *OOOO00O0O000O0O00 [0 ])#line:47
def f19 (OO0OOOO0OOOOOOO00 ,OOOOO0O0000O00OOO ,OO0000OOOOOO0000O ,OO0O0O000O00000OO ):#line:49
    O0000OOO0O00OO0O0 =f23 (OO0OOOO0OOOOOOO00 ,OOOOO0O0000O00OOO )#line:50
    O00OO000O000000O0 =f23 (OO0000OOOOOO0000O ,OO0O0O000O00000OO )#line:51
    if (O0000OOO0O00OO0O0 !=O00OO000O000000O0 ):#line:54
        if (O0000OOO0O00OO0O0 is not None and O00OO000O000000O0 is not None ):#line:58
            OO0O0000000OOO0OO =f22 (OO0OOOO0OOOOOOO00 ,O0000OOO0O00OO0O0 )#line:60
            OO00OO00O00O00000 =f22 (OO0000OOOOOO0000O ,O00OO000O000000O0 )#line:61
            O0000OOO0OO00OOOO =(OO00OO00O00O00000 -OO0O0000000OOO0OO )/float (O0000OOO0O00OO0O0 -O00OO000O000000O0 )#line:62
            OO0OO0O0O00O00OO0 =(O0000OOO0O00OO0O0 *O0000OOO0OO00OOOO )+OO0O0000000OOO0OO #line:63
        else :#line:64
            if (O0000OOO0O00OO0O0 is None ):#line:66
                OO00OO00O00O00000 =f22 (OO0000OOOOOO0000O ,O00OO000O000000O0 )#line:67
                O0000OOO0OO00OOOO =OO0OOOO0OOOOOOO00 [0 ]#line:68
                OO0OO0O0O00O00OO0 =(O00OO000O000000O0 *O0000OOO0OO00OOOO )+OO00OO00O00O00000 #line:69
            elif (O00OO000O000000O0 is None ):#line:71
                OO0O0000000OOO0OO =f22 (OO0OOOO0OOOOOOO00 ,O0000OOO0O00OO0O0 )#line:72
                O0000OOO0OO00OOOO =OO0000OOOOOO0000O [0 ]#line:73
                OO0OO0O0O00O00OO0 =(O0000OOO0O00OO0O0 *O0000OOO0OO00OOOO )+OO0O0000000OOO0OO #line:74
            else :#line:75
                assert false #line:76
        return ((O0000OOO0OO00OOOO ,OO0OO0O0O00O00OO0 ),)#line:78
    else :#line:79
        OO0O0000000OOO0OO ,OO00OO00O00O00000 =None ,None #line:84
        if O0000OOO0O00OO0O0 is not None :#line:85
            OO0O0000000OOO0OO =f22 (OO0OOOO0OOOOOOO00 ,O0000OOO0O00OO0O0 )#line:86
        if O00OO000O000000O0 is not None :#line:88
            OO00OO00O00O00000 =f22 (OO0000OOOOOO0000O ,O00OO000O000000O0 )#line:89
        if OO0O0000000OOO0OO ==OO00OO00O00O00000 :#line:92
            return OO0OOOO0OOOOOOO00 ,OOOOO0O0000O00OOO ,OO0000OOOOOO0000O ,OO0O0O000O00000OO #line:93
        else :#line:94
            return None #line:95
def f20 (O00OO00O00O0OOOOO ,O0OOO0O00OO000O00 ,OOO0OOOOO0OO0O0OO ):#line:97
    return O00OO00O00O0OOOOO +EPSILON >=min (O0OOO0O00OO000O00 ,OOO0OOOOO0OO0O0OO )and O00OO00O00O0OOOOO -EPSILON <=max (O0OOO0O00OO000O00 ,OOO0OOOOO0OO0O0OO )#line:98
def f21 (O0OOOO000000O0O00 ,O0OOO000O00OOOOOO ,O0000OO0000000OOO ,O0O00O0O0OOOOOO0O ):#line:100
    O00OO00000OOO00O0 =f19 (O0OOOO000000O0O00 ,O0OOO000O00OOOOOO ,O0000OO0000000OOO ,O0O00O0O0OOOOOO0O )#line:101
    if O00OO00000OOO00O0 is not None :#line:102
        O00OO00000OOO00O0 =O00OO00000OOO00O0 [0 ]#line:103
        if f20 (O00OO00000OOO00O0 [0 ],O0OOOO000000O0O00 [0 ],O0OOO000O00OOOOOO [0 ])and f20 (O00OO00000OOO00O0 [1 ],O0OOOO000000O0O00 [1 ],O0OOO000O00OOOOOO [1 ])and f20 (O00OO00000OOO00O0 [0 ],O0000OO0000000OOO [0 ],O0O00O0O0OOOOOO0O [0 ])and f20 (O00OO00000OOO00O0 [1 ],O0000OO0000000OOO [1 ],O0O00O0O0OOOOOO0O [1 ]):#line:104
            return O00OO00000OOO00O0 #line:105
    return None #line:106
def f18 (O0O0O0O0000OO0O00 ,OOO00OO00OO00OOOO ,O0OO000OOOO0OO0OO ):#line:109
    return f21 (O0OO000OOOO0OO0OO [0 ],O0OO000OOOO0OO0OO [1 ],O0O0O0O0000OO0O00 ,OOO00OO00OO00OOOO )#line:110
def f13 (OO0OO000OOOOO0O00 ,O0OOOOOOO00000000 ,OOO00O0000OOO0OOO ):#line:112
    for O000OOOO000O0O0O0 in OOO00O0000OOO0OOO :#line:113
        OOO00O0O00O00O00O =f18 (OO0OO000OOOOO0O00 ,O0OOOOOOO00000000 ,O000OOOO000O0O0O0 )#line:114
        if OOO00O0O00O00O00O !=None :#line:115
            return OOO00O0O00O00O00O #line:116
    return None #line:117
class GreedyNavigator (NavMeshNavigator ):#line:125
    def createPathNetwork (O0000OOOO000OO0OO ,O0O00OOOO0OO0OO00 ):#line:127
        O0000OOOO000OO0OO .pathnodes ,O0000OOOO000OO0OO .pathnetwork ,O0000OOOO000OO0OO .navmesh =myCreatePathNetwork (O0O00OOOO0OO0OO00 ,O0000OOOO000OO0OO .agent )#line:128
        return None #line:129
    def computePath (OOO0O0000OO000OOO ,OOOO0OOO00OOO0O00 ,O00O0O00OO0O000OO ):#line:136
        OOO0O0000OO000OOO .setPath (None )#line:137
        if OOO0O0000OO000OOO .agent !=None and OOO0O0000OO000OOO .world !=None :#line:139
            OOO0O0000OO000OOO .source =OOOO0OOO00OOO0O00 #line:140
            OOO0O0000OO000OOO .destination =O00O0O00OO0O000OO #line:141
            if f17 (OOOO0OOO00OOO0O00 ,O00O0O00OO0O000OO ,OOO0O0000OO000OOO .world .getLinesWithoutBorders (),OOO0O0000OO000OOO .world .getPoints (),OOO0O0000OO000OOO .agent ):#line:145
                OOO0O0000OO000OOO .agent .moveToTarget (O00O0O00OO0O000OO )#line:146
            else :#line:147
                OO000000000O0O000 =f16 (OOOO0OOO00OOO0O00 ,OOO0O0000OO000OOO .pathnodes ,OOO0O0000OO000OOO .world .getLinesWithoutBorders (),OOO0O0000OO000OOO .agent )#line:150
                OOO0000000OO0O00O =f16 (O00O0O00OO0O000OO ,OOO0O0000OO000OOO .pathnodes ,OOO0O0000OO000OOO .world .getLinesWithoutBorders (),OOO0O0000OO000OOO .agent )#line:151
                if OO000000000O0O000 !=None and OOO0000000OO0O00O !=None :#line:152
                    OOOO00OO00O0OOO0O =OOO0O0000OO000OOO .pathnetwork #line:154
                    O000OO00000OO0000 =[]#line:155
                    OO0OOOO0OO00O0O00 ,O000OO00000OO0000 =f15 (OO000000000O0O000 ,OOO0000000OO0O00O ,OOOO00OO00O0OOO0O )#line:157
                    if OO0OOOO0OO00O0O00 is not None and len (OO0OOOO0OO00O0O00 )>0 :#line:158
                        OO0OOOO0OO00O0O00 =f14 (OOOO0OOO00OOO0O00 ,O00O0O00OO0O000OO ,OO0OOOO0OO00O0O00 ,OOO0O0000OO000OOO .world ,OOO0O0000OO000OOO .agent )#line:160
                        OOO0O0000OO000OOO .setPath (OO0OOOO0OO00O0O00 )#line:162
                        if OOO0O0000OO000OOO .path is not None and len (OOO0O0000OO000OOO .path )>0 :#line:163
                            OO0O0OOO00OO00OOO =OOO0O0000OO000OOO .path .pop (0 )#line:165
                            OOO0O0000OO000OOO .agent .moveToTarget (OO0O0OOO00OO00OOO )#line:166
        return None #line:167
    def checkpoint (OOO0000000O000O0O ):#line:171
        myCheckpoint (OOO0000000O000O0O )#line:172
        return None #line:173
    def smooth (OO0000OOOOOO000OO ):#line:177
        return mySmooth (OO0000OOOOOO000OO )#line:178
    def update (O0OO00OO00000OO00 ,O0O0O00OOO00O0OOO ):#line:180
        myUpdate (O0OO00OO00000OO00 ,O0O0O00OOO00O0OOO )#line:181
def unobstructedNetwork (O0000000OOOOO00OO ,OOOO00OO0OO0O0O0O ,O0O00OOO0O0000OO0 ):#line:185
    O0O000OO0O0OOOOO0 =[]#line:186
    for O0OO0O00O00O00OOO in O0000000OOOOO00OO :#line:187
        OOOOO000OOO0OOO0O =f13 (O0OO0O00O00O00OOO [0 ],O0OO0O00O00O00OOO [1 ],OOOO00OO0OO0O0O0O )#line:188
        if OOOOO000OOO0OOO0O ==None :#line:189
            O0O000OO0O0OOOOO0 .append (O0OO0O00O00O00OOO )#line:190
    return O0O000OO0O0OOOOO0 #line:191
def f17 (O00000O0OOO000000 ,O00OOO0000O000OOO ,O000OOOOO0O0O00OO ,O0OOOO0OO000OO0OO ,OOO00OO0000OOOOOO ):#line:200
    return False #line:212
def f16 (OOO0OOO0OO0O0O000 ,O00O0OO00OO0O0OOO ,OOOO0OOOOOO0O000O ,OOO000O000OO0OOO0 ):#line:219
    O0O000O0O0OOO0OO0 =None #line:222
    OO0O0OO0OO00OO0OO =INFINITY #line:224
    for O0OO0OO00OO0OOO0O in O00O0OO00OO0O0OOO :#line:225
        if f13 (OOO0OOO0OO0O0O000 ,O0OO0OO00OO0OOO0O ,OOOO0OOOOOO0O000O )==None :#line:226
            O00OO000O0O000OO0 =OOO000O000OO0OOO0 .getMaxRadius ()#line:227
            O0O0O00OOO00OO0OO =True #line:228
            for OO00O00O000000O00 in OOOO0OOOOOO0O000O :#line:229
                if f12 (OO00O00O000000O00 ,OOO0OOO0OO0O0O000 )>O00OO000O0O000OO0 and f12 (OO00O00O000000O00 ,O0OO0OO00OO0OOO0O )>O00OO000O0O000OO0 :#line:230
                    pass #line:231
                else :#line:232
                    O0O0O00OOO00OO0OO =False #line:233
                    break #line:234
            if O0O0O00OOO00OO0OO :#line:235
                OO0OO0000O00O00O0 =f11 (OOO0OOO0OO0O0O000 ,O0OO0OO00OO0OOO0O )#line:236
                if O0O000O0O0OOO0OO0 ==None or OO0OO0000O00O00O0 <OO0O0OO0OO00OO0OO :#line:237
                    O0O000O0O0OOO0OO0 =O0OO0OO00OO0OOO0O #line:238
                    OO0O0OO0OO00OO0OO =OO0OO0000O00O00O0 #line:239
    return O0O000O0O0OOO0OO0 #line:241
def insert_sort (OOO0O00OO0OO00O00 ,OOOOO000OOO00OOOO ,O0O00000OO00O0OOO =lambda O0O0O00OOO000O0O0 :O0O0O00OOO000O0O0 ):#line:252
    O0O0OOOOO0OO0O000 =0 #line:253
    for OO0000O000O00OO00 in OOOOO000OOO00OOOO :#line:254
        if O0O00000OO00O0OOO (OOO0O00OO0OO00O00 )<O0O00000OO00O0OOO (OO0000O000O00OO00 ):#line:255
            break #line:256
        O0O0OOOOO0OO0O000 =O0O0OOOOO0OO0O000 +1 #line:257
    return OOOOO000OOO00OOOO [:O0O0OOOOO0OO0O000 ]+[OOO0O00OO0OO00O00 ]+OOOOO000OOO00OOOO [O0O0OOOOO0OO0O000 :]#line:258
def f15 (O00OOOOOOO00OOOOO ,O0OOO000O0OOOO00O ,O0O0O0OO00OO00O00 ):#line:268
    OO0000O0O0O0OO0OO =[O00OOOOOOO00OOOOO ]#line:269
    O00000OOOOO0OOO0O =set ()#line:270
    OOOO00000OO000O0O =O00OOOOOOO00OOOOO #line:271
    O0O0000OO000O000O ={OOOO00000OO000O0O :None }#line:272
    O0OO0O0O00O0O00O0 =[]#line:273
    O0O0OO0000O0O0O00 =0 #line:274
    while OOOO00000OO000O0O !=O0OOO000O0OOOO00O and len (OO0000O0O0O0OO0OO )>0 :#line:275
        OOOO00000OO000O0O =OO0000O0O0O0OO0OO .pop (0 )#line:276
        print (OOOO00000OO000O0O )#line:277
        O00000OOOOO0OOO0O .add (OOOO00000OO000O0O )#line:278
        OOOOOO0O0OOOO0OOO =get_successors (OOOO00000OO000O0O ,O0O0O0OO00OO00O00 )#line:279
        for O00O0O000OO00O0OO in OOOOOO0O0OOOO0OOO :#line:280
            if O00O0O000OO00O0OO not in O00000OOOOO0OOO0O :#line:281
                O0O0000OO000O000O [O00O0O000OO00O0OO ]=OOOO00000OO000O0O #line:282
                OO0000O0O0O0OO0OO =insert_sort (O00O0O000OO00O0OO ,OO0000O0O0O0OO0OO ,lambda OO0OOOOO0O000OO00 :h_func (OO0OOOOO0O000OO00 ,O0OOO000O0OOOO00O ))#line:284
        O0O0OO0000O0O0O00 =O0O0OO0000O0O0O00 +1 #line:285
    if OOOO00000OO000O0O ==O0OOO000O0OOOO00O :#line:286
        O0O0OOOOO000O0OO0 =OOOO00000OO000O0O #line:287
        while O0O0000OO000O000O [O0O0OOOOO000O0OO0 ]is not None :#line:288
            O0O0OOOOO000O0OO0 =O0O0000OO000O000O [O0O0OOOOO000O0OO0 ]#line:289
            O0OO0O0O00O0O00O0 .append (O0O0OOOOO000O0OO0 )#line:290
        O0OO0O0O00O0O00O0 =list (reversed (O0OO0O0O00O0O00O0 ))#line:291
    return O0OO0O0O00O0O00O0 ,O00000OOOOO0OOO0O #line:331
def get_successors (O0OOO00OO0000O000 ,OOO0O000OO0O0OO00 ):#line:343
    O00000O000O0OOO00 =[]#line:344
    for OO000O00OOOO0O0OO in OOO0O000OO0O0OO00 :#line:345
        if OO000O00OOOO0O0OO [0 ]==O0OOO00OO0000O000 :#line:346
            O00000O000O0OOO00 .append (OO000O00OOOO0O0OO [1 ])#line:347
        elif OO000O00OOOO0O0OO [1 ]==O0OOO00OO0000O000 :#line:348
            O00000O000O0OOO00 .append (OO000O00OOOO0O0OO [0 ])#line:349
    return O00000O000O0OOO00 #line:350
def h_func (O00O00O000OOO00O0 ,O0OOO0O0O0OO000OO ):#line:352
    return f11 (O00O00O000OOO00O0 ,O0OOO0O0O0OO000OO )#line:353
def myUpdate (O0000OO00O0O0O000 ,OOO000OO0OOOOO000 ):#line:356
        return None #line:371
def myCheckpoint (O0OOOOO000OOO0O0O ):#line:376
    return None #line:377
def myCheckForShortcut (O00O00OOOO0O0000O ):#line:384
    return False #line:394
def f14 (OO0O0000O0O00O00O ,O00OO00O0O0O0OO0O ,O00O0O0OO00O0O000 ,O0OOOOO0OOO0O000O ,O0O000000OOOOOOOO ):#line:401
    return O00O0O0OO00O0O000 #line:443
def mySmooth (OO0OOOO0OOOO0OOO0 ):#line:450
    return False #line:462
def canSmooth (OOO00OOOOOO0OO0O0 ):#line:465
    return False 